<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAB/AKMDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACmU+mUAFPplI77FzQAc+lH1NY2o+JNO0i8SC81C3tp
        XieZI5pQmUTG9v8Ax9a8C+In7a3hHwbpN1NbS/adWtdXNhPprKfM2RXccNyV/wC2Tean96jmOmhha+I/
        hRPpPzD6YprMPUflXxn/AMNieMfE3iLUn8JfD/Wte0eSKKGBUtHAWVXfe6vs/jTY6f7lZdn46/aWv9O8
        MQxfDy+kfRvKmmmmmht3vdkMsTo+9/496P8A76VPOegsor/bnGP/AG8fcQbFKGH1r4ek+IX7TGlw+JGu
        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
</value>
  </data>
</root>